import type { Metadata } from "next";
import AuthProvider from "./context/AuthProvider";
import { AppRouterCacheProvider } from '@mui/material-nextjs/v15-appRouter';
import StyledComponentsRegistry from "./components/styledComponentsRegistry";
import { ThemeModeProvider } from "./context/ThemeModeProvider";
import { Geist, Geist_Mono } from "next/font/google";
import LocalizationContextProvider from "./context/LocalizationPovider";
import DeleteModalContext from "./context/DeleteModalContext";
import { UserInfoProvider } from "./context/UserInfoProvider";
import { ErrorAlertProvider } from "./context/PageErrorAlertProvider";
import { SuccessAlertProvider } from "./context/PageSuccessAlertProvider";
import "./globals.css";

import { Roboto } from 'next/font/google';

const roboto = Roboto({
  weight: ['300', '400', '500', '700'],
  subsets: ['latin'],
  display: 'swap',
  variable: '--font-roboto',
});

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body className={`${geistSans.variable} ${geistMono.variable}`}>
        <AppRouterCacheProvider>
          <StyledComponentsRegistry>
           <ThemeModeProvider>
            <DeleteModalContext>
              <ErrorAlertProvider>
                <SuccessAlertProvider>
                  <AuthProvider>
                    <UserInfoProvider>
                      <LocalizationContextProvider>
                        {children}
                      </LocalizationContextProvider>
                    </UserInfoProvider>
                  </AuthProvider>
                </SuccessAlertProvider>
              </ErrorAlertProvider>
            </DeleteModalContext>
           </ThemeModeProvider>
          </StyledComponentsRegistry>
        </AppRouterCacheProvider>
      </body>
    </html>
  );
}
